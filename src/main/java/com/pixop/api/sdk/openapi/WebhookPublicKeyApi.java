/*
 * Pixop API Documentation
 *  The Pixop API provides a comprehensive RESTful interface for interacting with the Pixop Platform. It allows users to manage API keys, projects, videos, and more.  The Pixop Platform offers video processing features such as upscaling, format conversion, and compression. It uses AI-driven algorithms to optimize video quality, reduce file sizes, and improve playback performance.  **Quick Start Guide** - Explore the [Pixop API Documentation](https://docs.pixop.com/reference/) to familiarize yourself with the API's capabilities.  **Required Headers** Include the following headers in all API requests: - `Accept`: `application/json` - `Content-Type`: `application/json` - `X-API-Key`: Your API key for authentication (e.g., `X-API-Key: <your-api-key>`).     **Note:** API key management endpoints that use Basic Authentication do not require the `X-API-Key` header.  **Rate Limits** All endpoints, except those related to API key management, enforce rate limits. Response headers provide the following rate limit details: - `X-RateLimit-Limit`: The maximum number of requests allowed per minute. - `X-RateLimit-Remaining`: The number of requests remaining in the current rate limit window. - `X-RateLimit-Reset`: The number of seconds until the current rate limit window resets. 
 *
 * The version of the OpenAPI document: 1.0.0-rc.2
 * Contact: api@pixop.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.pixop.api.sdk.openapi;

import com.pixop.api.sdk.ApiCallback;
import com.pixop.api.sdk.ApiClient;
import com.pixop.api.sdk.ApiException;
import com.pixop.api.sdk.ApiResponse;
import com.pixop.api.sdk.Configuration;
import com.pixop.api.sdk.Pair;
import com.pixop.api.sdk.ProgressRequestBody;
import com.pixop.api.sdk.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import com.pixop.api.sdk.model.dto.Error;
import java.util.UUID;
import com.pixop.api.sdk.model.dto.WebhookPublicKey;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class WebhookPublicKeyApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public WebhookPublicKeyApi() {
        this(Configuration.getDefaultApiClient());
    }

    public WebhookPublicKeyApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for getWebhookPublicKeyById
     * @param id The unique identifier for the object. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successfully retrieved webhook public key details. </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Invalid request. Inspect the details of the error for more information. </td><td>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  </td></tr>
        <tr><td> 401 </td><td> Authorization failed. Missing or invalid &#x60;X-API-Key&#x60; or basic authentication credentials. </td><td>  * WWW-Authenticate - The authentication method that should be used to gain access to the resource. <br>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  </td></tr>
        <tr><td> 403 </td><td> Access denied. You do not have the necessary permissions to access this resource. </td><td>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  </td></tr>
        <tr><td> 404 </td><td> The requested resource could not be found. </td><td>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  </td></tr>
        <tr><td> 429 </td><td> Too Many Requests. The rate limit for this resource has been exceeded. </td><td>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  * X-RateLimit-Retry-After -  <br>  </td></tr>
        <tr><td> 500 </td><td> An unexpected error occurred on the server. </td><td>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  </td></tr>
     </table>
     */
    public okhttp3.Call getWebhookPublicKeyByIdCall(UUID id, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/v1/webhooks/public-keys/{id}"
            .replace("{" + "id" + "}", localVarApiClient.escapeString(id.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "api_key" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getWebhookPublicKeyByIdValidateBeforeCall(UUID id, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'id' is set
        if (id == null) {
            throw new ApiException("Missing the required parameter 'id' when calling getWebhookPublicKeyById(Async)");
        }

        return getWebhookPublicKeyByIdCall(id, _callback);

    }

    /**
     * Retrieve a specific webhook public key
     * Retrieves the details of a specific webhook public key using its unique identifier.
     * @param id The unique identifier for the object. (required)
     * @return WebhookPublicKey
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successfully retrieved webhook public key details. </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Invalid request. Inspect the details of the error for more information. </td><td>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  </td></tr>
        <tr><td> 401 </td><td> Authorization failed. Missing or invalid &#x60;X-API-Key&#x60; or basic authentication credentials. </td><td>  * WWW-Authenticate - The authentication method that should be used to gain access to the resource. <br>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  </td></tr>
        <tr><td> 403 </td><td> Access denied. You do not have the necessary permissions to access this resource. </td><td>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  </td></tr>
        <tr><td> 404 </td><td> The requested resource could not be found. </td><td>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  </td></tr>
        <tr><td> 429 </td><td> Too Many Requests. The rate limit for this resource has been exceeded. </td><td>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  * X-RateLimit-Retry-After -  <br>  </td></tr>
        <tr><td> 500 </td><td> An unexpected error occurred on the server. </td><td>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  </td></tr>
     </table>
     */
    public WebhookPublicKey getWebhookPublicKeyById(UUID id) throws ApiException {
        ApiResponse<WebhookPublicKey> localVarResp = getWebhookPublicKeyByIdWithHttpInfo(id);
        return localVarResp.getData();
    }

    /**
     * Retrieve a specific webhook public key
     * Retrieves the details of a specific webhook public key using its unique identifier.
     * @param id The unique identifier for the object. (required)
     * @return ApiResponse&lt;WebhookPublicKey&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successfully retrieved webhook public key details. </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Invalid request. Inspect the details of the error for more information. </td><td>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  </td></tr>
        <tr><td> 401 </td><td> Authorization failed. Missing or invalid &#x60;X-API-Key&#x60; or basic authentication credentials. </td><td>  * WWW-Authenticate - The authentication method that should be used to gain access to the resource. <br>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  </td></tr>
        <tr><td> 403 </td><td> Access denied. You do not have the necessary permissions to access this resource. </td><td>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  </td></tr>
        <tr><td> 404 </td><td> The requested resource could not be found. </td><td>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  </td></tr>
        <tr><td> 429 </td><td> Too Many Requests. The rate limit for this resource has been exceeded. </td><td>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  * X-RateLimit-Retry-After -  <br>  </td></tr>
        <tr><td> 500 </td><td> An unexpected error occurred on the server. </td><td>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  </td></tr>
     </table>
     */
    public ApiResponse<WebhookPublicKey> getWebhookPublicKeyByIdWithHttpInfo(UUID id) throws ApiException {
        okhttp3.Call localVarCall = getWebhookPublicKeyByIdValidateBeforeCall(id, null);
        Type localVarReturnType = new TypeToken<WebhookPublicKey>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Retrieve a specific webhook public key (asynchronously)
     * Retrieves the details of a specific webhook public key using its unique identifier.
     * @param id The unique identifier for the object. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successfully retrieved webhook public key details. </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Invalid request. Inspect the details of the error for more information. </td><td>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  </td></tr>
        <tr><td> 401 </td><td> Authorization failed. Missing or invalid &#x60;X-API-Key&#x60; or basic authentication credentials. </td><td>  * WWW-Authenticate - The authentication method that should be used to gain access to the resource. <br>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  </td></tr>
        <tr><td> 403 </td><td> Access denied. You do not have the necessary permissions to access this resource. </td><td>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  </td></tr>
        <tr><td> 404 </td><td> The requested resource could not be found. </td><td>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  </td></tr>
        <tr><td> 429 </td><td> Too Many Requests. The rate limit for this resource has been exceeded. </td><td>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  * X-RateLimit-Retry-After -  <br>  </td></tr>
        <tr><td> 500 </td><td> An unexpected error occurred on the server. </td><td>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  </td></tr>
     </table>
     */
    public okhttp3.Call getWebhookPublicKeyByIdAsync(UUID id, final ApiCallback<WebhookPublicKey> _callback) throws ApiException {

        okhttp3.Call localVarCall = getWebhookPublicKeyByIdValidateBeforeCall(id, _callback);
        Type localVarReturnType = new TypeToken<WebhookPublicKey>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for getWebhookPublicKeys
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successfully retrieved the list of webhook public keys. </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Invalid request. Inspect the details of the error for more information. </td><td>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  </td></tr>
        <tr><td> 401 </td><td> Authorization failed. Missing or invalid &#x60;X-API-Key&#x60; or basic authentication credentials. </td><td>  * WWW-Authenticate - The authentication method that should be used to gain access to the resource. <br>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  </td></tr>
        <tr><td> 403 </td><td> Access denied. You do not have the necessary permissions to access this resource. </td><td>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  </td></tr>
        <tr><td> 429 </td><td> Too Many Requests. The rate limit for this resource has been exceeded. </td><td>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  * X-RateLimit-Retry-After -  <br>  </td></tr>
        <tr><td> 500 </td><td> An unexpected error occurred on the server. </td><td>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  </td></tr>
     </table>
     */
    public okhttp3.Call getWebhookPublicKeysCall(final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/v1/webhooks/public-keys";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "api_key" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getWebhookPublicKeysValidateBeforeCall(final ApiCallback _callback) throws ApiException {
        return getWebhookPublicKeysCall(_callback);

    }

    /**
     * List all webhook public keys
     * Returns a list of webhook public keys used to verify webhook signatures.  Typically, only one key is active at a time.  During key rotation — which occurs at least every three months — two keys may temporarily exist to support a smooth transition. 
     * @return List&lt;WebhookPublicKey&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successfully retrieved the list of webhook public keys. </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Invalid request. Inspect the details of the error for more information. </td><td>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  </td></tr>
        <tr><td> 401 </td><td> Authorization failed. Missing or invalid &#x60;X-API-Key&#x60; or basic authentication credentials. </td><td>  * WWW-Authenticate - The authentication method that should be used to gain access to the resource. <br>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  </td></tr>
        <tr><td> 403 </td><td> Access denied. You do not have the necessary permissions to access this resource. </td><td>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  </td></tr>
        <tr><td> 429 </td><td> Too Many Requests. The rate limit for this resource has been exceeded. </td><td>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  * X-RateLimit-Retry-After -  <br>  </td></tr>
        <tr><td> 500 </td><td> An unexpected error occurred on the server. </td><td>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  </td></tr>
     </table>
     */
    public List<WebhookPublicKey> getWebhookPublicKeys() throws ApiException {
        ApiResponse<List<WebhookPublicKey>> localVarResp = getWebhookPublicKeysWithHttpInfo();
        return localVarResp.getData();
    }

    /**
     * List all webhook public keys
     * Returns a list of webhook public keys used to verify webhook signatures.  Typically, only one key is active at a time.  During key rotation — which occurs at least every three months — two keys may temporarily exist to support a smooth transition. 
     * @return ApiResponse&lt;List&lt;WebhookPublicKey&gt;&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successfully retrieved the list of webhook public keys. </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Invalid request. Inspect the details of the error for more information. </td><td>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  </td></tr>
        <tr><td> 401 </td><td> Authorization failed. Missing or invalid &#x60;X-API-Key&#x60; or basic authentication credentials. </td><td>  * WWW-Authenticate - The authentication method that should be used to gain access to the resource. <br>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  </td></tr>
        <tr><td> 403 </td><td> Access denied. You do not have the necessary permissions to access this resource. </td><td>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  </td></tr>
        <tr><td> 429 </td><td> Too Many Requests. The rate limit for this resource has been exceeded. </td><td>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  * X-RateLimit-Retry-After -  <br>  </td></tr>
        <tr><td> 500 </td><td> An unexpected error occurred on the server. </td><td>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  </td></tr>
     </table>
     */
    public ApiResponse<List<WebhookPublicKey>> getWebhookPublicKeysWithHttpInfo() throws ApiException {
        okhttp3.Call localVarCall = getWebhookPublicKeysValidateBeforeCall(null);
        Type localVarReturnType = new TypeToken<List<WebhookPublicKey>>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * List all webhook public keys (asynchronously)
     * Returns a list of webhook public keys used to verify webhook signatures.  Typically, only one key is active at a time.  During key rotation — which occurs at least every three months — two keys may temporarily exist to support a smooth transition. 
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successfully retrieved the list of webhook public keys. </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Invalid request. Inspect the details of the error for more information. </td><td>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  </td></tr>
        <tr><td> 401 </td><td> Authorization failed. Missing or invalid &#x60;X-API-Key&#x60; or basic authentication credentials. </td><td>  * WWW-Authenticate - The authentication method that should be used to gain access to the resource. <br>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  </td></tr>
        <tr><td> 403 </td><td> Access denied. You do not have the necessary permissions to access this resource. </td><td>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  </td></tr>
        <tr><td> 429 </td><td> Too Many Requests. The rate limit for this resource has been exceeded. </td><td>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  * X-RateLimit-Retry-After -  <br>  </td></tr>
        <tr><td> 500 </td><td> An unexpected error occurred on the server. </td><td>  * X-RateLimit-Limit -  <br>  * X-RateLimit-Remaining -  <br>  * X-RateLimit-Reset -  <br>  </td></tr>
     </table>
     */
    public okhttp3.Call getWebhookPublicKeysAsync(final ApiCallback<List<WebhookPublicKey>> _callback) throws ApiException {

        okhttp3.Call localVarCall = getWebhookPublicKeysValidateBeforeCall(_callback);
        Type localVarReturnType = new TypeToken<List<WebhookPublicKey>>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
