/*
 * Pixop API
 *  The Pixop API provides a comprehensive RESTful interface for interacting with the Pixop Platform. It allows users to manage API keys, projects, videos, and more.  The Pixop Platform offers video processing features such as upscaling, format conversion, and compression. It uses AI-driven algorithms to optimize video quality, reduce file sizes, and improve playback performance.  **Quick Start Guide** - Explore the [Pixop API Documentation](https://docs.pixop.com/reference/) to familiarize yourself with the API's capabilities.  **Required Headers** Include the following headers in all API requests: - `Accept`: `application/json` - `Content-Type`: `application/json` - `X-API-Key`: Your API key for authentication (e.g., `X-API-Key: <your-api-key>`).     **Note:** API key management endpoints that use Basic Authentication do not require the `X-API-Key` header.  **Rate Limits** All endpoints, except those related to API key management, enforce rate limits. Response headers provide the following rate limit details: - `X-RateLimit-Limit`: The maximum number of requests allowed per minute. - `X-RateLimit-Remaining`: The number of requests remaining in the current rate limit window. - `X-RateLimit-Reset`: The number of seconds until the current rate limit window resets. 
 *
 * The version of the OpenAPI document: 1.0.0-rc.5
 * Contact: api@pixop.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.pixop.api.sdk.model.dto;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import java.io.UnsupportedEncodingException;
import java.net.URLEncoder;
import java.util.StringJoiner;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;

/**
 * Enumerates the known error codes returned by the API. Not all possible codes are listed here, and additional codes may be introduced in the future. When present, these values correspond to well-defined application or HTTP errors. 
 */
public enum ErrorCodeEnum {
  
  UNKNOWN("UNKNOWN"),
  
  TOO_MANY_REQUESTS("TOO_MANY_REQUESTS"),
  
  INVALID_CREDENTIALS("INVALID_CREDENTIALS"),
  
  ACCOUNT_LOCKED("ACCOUNT_LOCKED"),
  
  ACCOUNT_DISABLED("ACCOUNT_DISABLED"),
  
  ACCOUNT_EXPIRED("ACCOUNT_EXPIRED"),
  
  MISSING_API_KEY("MISSING_API_KEY"),
  
  INVALID_API_KEY("INVALID_API_KEY"),
  
  ACCESS_DENIED("ACCESS_DENIED"),
  
  RESOURCE_NOT_FOUND("RESOURCE_NOT_FOUND"),
  
  TEAM_NOT_FOUND("TEAM_NOT_FOUND"),
  
  DEFAULT_TEAM_NOT_API_ENABLED("DEFAULT_TEAM_NOT_API_ENABLED"),
  
  INVALID_INPUT("INVALID_INPUT"),
  
  FORBIDDEN("FORBIDDEN"),
  
  VALIDATION_ERROR("VALIDATION_ERROR"),
  
  WEBHOOK_NOT_ACTIVE("WEBHOOK_NOT_ACTIVE"),
  
  TOO_MANY_WEBHOOK_TEST_EVENTS("TOO_MANY_WEBHOOK_TEST_EVENTS"),
  
  CONTAINER_IS_NOT_SUPPORTED_FOR_SELECTED_CODEC("CONTAINER_IS_NOT_SUPPORTED_FOR_SELECTED_CODEC"),
  
  INSUFFICIENT_PROJECTED_BALANCE_ERROR("INSUFFICIENT_PROJECTED_BALANCE_ERROR"),
  
  PROJECT_WITH_VIDEOS_CANNOT_BE_DELETED("PROJECT_WITH_VIDEOS_CANNOT_BE_DELETED"),
  
  ACTIVE_API_KEY_CANNOT_BE_DELETED("ACTIVE_API_KEY_CANNOT_BE_DELETED"),
  
  VIDEO_IN_OPERATION_NOT_FAILED("VIDEO_IN_OPERATION_NOT_FAILED"),
  
  VIDEO_OUT_OPERATION_NOT_FAILED("VIDEO_OUT_OPERATION_NOT_FAILED"),
  
  VIDEO_ALREADY_BEING_COPIED_TO_OUTPUT_LOCATION("VIDEO_ALREADY_BEING_COPIED_TO_OUTPUT_LOCATION"),
  
  ONGOING_COPY_TO_OUTPUT_NEEDS_TO_BE_RESTARTED_OR_ABANDONED("ONGOING_COPY_TO_OUTPUT_NEEDS_TO_BE_RESTARTED_OR_ABANDONED"),
  
  BUCKET_NOT_FOUND("BUCKET_NOT_FOUND"),
  
  KEY_NOT_FOUND("KEY_NOT_FOUND"),
  
  HEAD_BUCKET_ERROR("HEAD_BUCKET_ERROR"),
  
  HEAD_OBJECT_ERROR("HEAD_OBJECT_ERROR"),
  
  RESOLVE_OBJECT_METADATA_ERROR("RESOLVE_OBJECT_METADATA_ERROR"),
  
  CONTENT_RANGE_HEADER_INVALID("CONTENT_RANGE_HEADER_INVALID"),
  
  CONTENT_NOT_PARTIAL_ERROR("CONTENT_NOT_PARTIAL_ERROR"),
  
  PARSE_CONTENT_TYPE_ERROR("PARSE_CONTENT_TYPE_ERROR"),
  
  NO_CONTENT("NO_CONTENT"),
  
  OBJECT_ALREADY_EXISTS("OBJECT_ALREADY_EXISTS"),
  
  CONFLICTING_DERIVED_VIDEO_IDS("CONFLICTING_DERIVED_VIDEO_IDS"),
  
  MAXIMUM_AMOUNT_OF_ACTIVE_API_KEYS_REACHED("MAXIMUM_AMOUNT_OF_ACTIVE_API_KEYS_REACHED"),
  
  MAXIMUM_AMOUNT_OF_ACTIVE_WEBHOOKS_REACHED("MAXIMUM_AMOUNT_OF_ACTIVE_WEBHOOKS_REACHED"),
  
  INVALID_REQUEST_BODY("INVALID_REQUEST_BODY"),
  
  MISSING_REQUEST_BODY("MISSING_REQUEST_BODY"),
  
  TARGET_RESOLUTION_OUT_OF_ALLOWED_RANGE("TARGET_RESOLUTION_OUT_OF_ALLOWED_RANGE"),
  
  TARGET_RESOLUTION_CANNOT_BE_LOWER_THAN_CALCULATED_ASPECT_RATIO_RESOLUTION("TARGET_RESOLUTION_CANNOT_BE_LOWER_THAN_CALCULATED_ASPECT_RATIO_RESOLUTION"),
  
  INVALID_START_POSITION("INVALID_START_POSITION"),
  
  INVALID_END_POSITION("INVALID_END_POSITION"),
  
  MISSING_CUSTOM_RESOLUTION("MISSING_CUSTOM_RESOLUTION"),
  
  INVALID_INPUT_COLOR_CONVERSION("INVALID_INPUT_COLOR_CONVERSION"),
  
  INVALID_OUTPUT_COLOR_CONVERSION("INVALID_OUTPUT_COLOR_CONVERSION"),
  
  UNSUPPORTED_CONTENT_TYPE("UNSUPPORTED_CONTENT_TYPE"),
  
  CHECKSUM_MISMATCH("CHECKSUM_MISMATCH"),
  
  VIDEO_IN_RESTART_CHECKSUM_MISMATCH("VIDEO_IN_RESTART_CHECKSUM_MISMATCH"),
  
  INVALID_HTTPS_URL("INVALID_HTTPS_URL"),
  
  UNEXPECTED_CONTENT_RANGE("UNEXPECTED_CONTENT_RANGE"),
  
  VIDEO_PROCESSING_NOT_DONE("VIDEO_PROCESSING_NOT_DONE"),
  
  WEBHOOK_RATE_LIMIT_EXCEEDED("WEBHOOK_RATE_LIMIT_EXCEEDED"),
  
  BAD_REQUEST("BAD_REQUEST"),
  
  UNAUTHORIZED("UNAUTHORIZED"),
  
  NOT_FOUND("NOT_FOUND"),
  
  CONFLICT("CONFLICT"),
  
  INTERNAL_SERVER_ERROR("INTERNAL_SERVER_ERROR"),
  
  UNKNOWN_DEFAULT_OPEN_API("unknown_default_open_api");

  private String value;

  ErrorCodeEnum(String value) {
    this.value = value;
  }

  @JsonValue
  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  @JsonCreator
  public static ErrorCodeEnum fromValue(String value) {
    for (ErrorCodeEnum b : ErrorCodeEnum.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    return UNKNOWN_DEFAULT_OPEN_API;
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    if (prefix == null) {
      prefix = "";
    }

    return String.format("%s=%s", prefix, this.toString());
  }
}

