/*
 * Pixop API
 *  The Pixop API provides a comprehensive RESTful interface for interacting with the Pixop Platform. It allows users to manage API keys, projects, videos, and more.  The Pixop Platform offers video processing features such as upscaling, format conversion, and compression. It uses AI-driven algorithms to optimize video quality, reduce file sizes, and improve playback performance.  **Quick Start Guide** - Explore the [Pixop API Documentation](https://docs.pixop.com/reference/) to familiarize yourself with the API's capabilities.  **Required Headers** Include the following headers in all API requests: - `Accept`: `application/json` - `Content-Type`: `application/json` - `X-API-Key`: Your API key for authentication (e.g., `X-API-Key: <your-api-key>`).     **Note:** API key management endpoints that use Basic Authentication do not require the `X-API-Key` header.  **Rate Limits** All endpoints, except those related to API key management, enforce rate limits. Response headers provide the following rate limit details: - `X-RateLimit-Limit`: The maximum number of requests allowed per minute. - `X-RateLimit-Remaining`: The number of requests remaining in the current rate limit window. - `X-RateLimit-Reset`: The number of seconds until the current rate limit window resets. 
 *
 * The version of the OpenAPI document: 1.0.0-rc.5
 * Contact: api@pixop.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.pixop.api.sdk.model.dto;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.math.BigDecimal;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import java.io.UnsupportedEncodingException;
import java.net.URLEncoder;
import java.util.StringJoiner;

/**
 * Represents the financial details of a team, including balance, spending, and discounts.
 */
@JsonPropertyOrder({
  FinancialDetails.JSON_PROPERTY_PROCESSING_CREDITS_BALANCE_USD,
  FinancialDetails.JSON_PROPERTY_PROCESSING_LIFETIME_SPEND_USD,
  FinancialDetails.JSON_PROPERTY_PROCESSING_BASE_VOLUME_DISCOUNT_GP,
  FinancialDetails.JSON_PROPERTY_PROCESSING_BASE_VOLUME_DISCOUNT_PERCENTAGE,
  FinancialDetails.JSON_PROPERTY_UTILITIES_BALANCE_USD
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-10-07T11:16:38.307086065Z[UTC]", comments = "Generator version: 7.15.0")
public class FinancialDetails {
  public static final String JSON_PROPERTY_PROCESSING_CREDITS_BALANCE_USD = "processingCreditsBalanceUsd";
  @javax.annotation.Nonnull
  private BigDecimal processingCreditsBalanceUsd;

  public static final String JSON_PROPERTY_PROCESSING_LIFETIME_SPEND_USD = "processingLifetimeSpendUsd";
  @javax.annotation.Nonnull
  private BigDecimal processingLifetimeSpendUsd;

  public static final String JSON_PROPERTY_PROCESSING_BASE_VOLUME_DISCOUNT_GP = "processingBaseVolumeDiscountGp";
  @javax.annotation.Nonnull
  private BigDecimal processingBaseVolumeDiscountGp;

  public static final String JSON_PROPERTY_PROCESSING_BASE_VOLUME_DISCOUNT_PERCENTAGE = "processingBaseVolumeDiscountPercentage";
  @javax.annotation.Nonnull
  private BigDecimal processingBaseVolumeDiscountPercentage;

  public static final String JSON_PROPERTY_UTILITIES_BALANCE_USD = "utilitiesBalanceUsd";
  @javax.annotation.Nonnull
  private BigDecimal utilitiesBalanceUsd;

  public FinancialDetails() {
  }
  /**
   * Constructor with only readonly parameters
   */
  @JsonCreator
  public FinancialDetails(
    @JsonProperty(JSON_PROPERTY_PROCESSING_BASE_VOLUME_DISCOUNT_GP) BigDecimal processingBaseVolumeDiscountGp, 
    @JsonProperty(JSON_PROPERTY_PROCESSING_BASE_VOLUME_DISCOUNT_PERCENTAGE) BigDecimal processingBaseVolumeDiscountPercentage
  ) {
    this();
    this.processingBaseVolumeDiscountGp = processingBaseVolumeDiscountGp;
    this.processingBaseVolumeDiscountPercentage = processingBaseVolumeDiscountPercentage;
  }

  public FinancialDetails processingCreditsBalanceUsd(@javax.annotation.Nonnull BigDecimal processingCreditsBalanceUsd) {
    
    this.processingCreditsBalanceUsd = processingCreditsBalanceUsd;
    return this;
  }

  /**
   * Represents an amount of money with up to three decimal places, e.g., 1.341 USD.
   * @return processingCreditsBalanceUsd
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PROCESSING_CREDITS_BALANCE_USD)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public BigDecimal getProcessingCreditsBalanceUsd() {
    return processingCreditsBalanceUsd;
  }


  @JsonProperty(JSON_PROPERTY_PROCESSING_CREDITS_BALANCE_USD)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setProcessingCreditsBalanceUsd(@javax.annotation.Nonnull BigDecimal processingCreditsBalanceUsd) {
    this.processingCreditsBalanceUsd = processingCreditsBalanceUsd;
  }

  public FinancialDetails processingLifetimeSpendUsd(@javax.annotation.Nonnull BigDecimal processingLifetimeSpendUsd) {
    
    this.processingLifetimeSpendUsd = processingLifetimeSpendUsd;
    return this;
  }

  /**
   * Represents an amount of money with up to three decimal places, e.g., 1.341 USD.
   * @return processingLifetimeSpendUsd
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PROCESSING_LIFETIME_SPEND_USD)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public BigDecimal getProcessingLifetimeSpendUsd() {
    return processingLifetimeSpendUsd;
  }


  @JsonProperty(JSON_PROPERTY_PROCESSING_LIFETIME_SPEND_USD)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setProcessingLifetimeSpendUsd(@javax.annotation.Nonnull BigDecimal processingLifetimeSpendUsd) {
    this.processingLifetimeSpendUsd = processingLifetimeSpendUsd;
  }

  /**
   * The base volume discount, in gigapixels (GP), applied to the team&#39;s processing jobs.  Volume discounts scale with the quantity of gigapixels processed in a single job, reaching the maximum discount percentage at 1000 GP. 
   * @return processingBaseVolumeDiscountGp
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PROCESSING_BASE_VOLUME_DISCOUNT_GP)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public BigDecimal getProcessingBaseVolumeDiscountGp() {
    return processingBaseVolumeDiscountGp;
  }



  /**
   * Represents the discount percentage applied to a cost or product. For example, 3.3 indicates a 3.3% discount.
   * minimum: 0
   * maximum: 100
   * @return processingBaseVolumeDiscountPercentage
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PROCESSING_BASE_VOLUME_DISCOUNT_PERCENTAGE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public BigDecimal getProcessingBaseVolumeDiscountPercentage() {
    return processingBaseVolumeDiscountPercentage;
  }



  public FinancialDetails utilitiesBalanceUsd(@javax.annotation.Nonnull BigDecimal utilitiesBalanceUsd) {
    
    this.utilitiesBalanceUsd = utilitiesBalanceUsd;
    return this;
  }

  /**
   * Represents an amount of money with up to three decimal places, e.g., 1.341 USD.
   * @return utilitiesBalanceUsd
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_UTILITIES_BALANCE_USD)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public BigDecimal getUtilitiesBalanceUsd() {
    return utilitiesBalanceUsd;
  }


  @JsonProperty(JSON_PROPERTY_UTILITIES_BALANCE_USD)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setUtilitiesBalanceUsd(@javax.annotation.Nonnull BigDecimal utilitiesBalanceUsd) {
    this.utilitiesBalanceUsd = utilitiesBalanceUsd;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FinancialDetails financialDetails = (FinancialDetails) o;
    return Objects.equals(this.processingCreditsBalanceUsd, financialDetails.processingCreditsBalanceUsd) &&
        Objects.equals(this.processingLifetimeSpendUsd, financialDetails.processingLifetimeSpendUsd) &&
        Objects.equals(this.processingBaseVolumeDiscountGp, financialDetails.processingBaseVolumeDiscountGp) &&
        Objects.equals(this.processingBaseVolumeDiscountPercentage, financialDetails.processingBaseVolumeDiscountPercentage) &&
        Objects.equals(this.utilitiesBalanceUsd, financialDetails.utilitiesBalanceUsd);
  }

  @Override
  public int hashCode() {
    return Objects.hash(processingCreditsBalanceUsd, processingLifetimeSpendUsd, processingBaseVolumeDiscountGp, processingBaseVolumeDiscountPercentage, utilitiesBalanceUsd);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FinancialDetails {\n");
    sb.append("    processingCreditsBalanceUsd: ").append(toIndentedString(processingCreditsBalanceUsd)).append("\n");
    sb.append("    processingLifetimeSpendUsd: ").append(toIndentedString(processingLifetimeSpendUsd)).append("\n");
    sb.append("    processingBaseVolumeDiscountGp: ").append(toIndentedString(processingBaseVolumeDiscountGp)).append("\n");
    sb.append("    processingBaseVolumeDiscountPercentage: ").append(toIndentedString(processingBaseVolumeDiscountPercentage)).append("\n");
    sb.append("    utilitiesBalanceUsd: ").append(toIndentedString(utilitiesBalanceUsd)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `processingCreditsBalanceUsd` to the URL query string
    if (getProcessingCreditsBalanceUsd() != null) {
      try {
        joiner.add(String.format("%sprocessingCreditsBalanceUsd%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getProcessingCreditsBalanceUsd()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `processingLifetimeSpendUsd` to the URL query string
    if (getProcessingLifetimeSpendUsd() != null) {
      try {
        joiner.add(String.format("%sprocessingLifetimeSpendUsd%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getProcessingLifetimeSpendUsd()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `processingBaseVolumeDiscountGp` to the URL query string
    if (getProcessingBaseVolumeDiscountGp() != null) {
      try {
        joiner.add(String.format("%sprocessingBaseVolumeDiscountGp%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getProcessingBaseVolumeDiscountGp()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `processingBaseVolumeDiscountPercentage` to the URL query string
    if (getProcessingBaseVolumeDiscountPercentage() != null) {
      try {
        joiner.add(String.format("%sprocessingBaseVolumeDiscountPercentage%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getProcessingBaseVolumeDiscountPercentage()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `utilitiesBalanceUsd` to the URL query string
    if (getUtilitiesBalanceUsd() != null) {
      try {
        joiner.add(String.format("%sutilitiesBalanceUsd%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getUtilitiesBalanceUsd()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    return joiner.toString();
  }

}

